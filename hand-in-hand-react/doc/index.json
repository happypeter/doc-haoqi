{
  "vlink": "https://haoqicat-1253322599.costj.myqcloud.com/hand-in-hand-react",
  "name": "React 手牵手",
  "price": "100",
  "intro": "课程已过期，更新内容在《React 图片上传》和《JWT 破冰》",
  "writing_to_who":
    "注意这并不是一套初级课程。课程是为有 Nodejs + React 基础的同学准备的。作为预备知识，可以先看好奇猫上的 《 React-Express 极简 API 》课程。",
  "learning_goal":
    "学习 React + Express 前后端分离的架构，MongoDB 使用，JWT 认证方式，权限管理，图片上传，文章增删改查日常操作。",
  "service": [
    "所有课程视频和文字稿",
    "所有相关代码",
    "课程有效期一年",
    "一年内所有课程改版内容免费获"
  ],
  "content": [
    {
      "header": "第一章：搭建后端开发环境",
      "section": [
        {
          "title": "新建一个简单的 Express 应用",
          "link": "1-express-env"
        },
        {
          "title": "Express 应用开发必备神器 Nodemon",
          "link": "2-nodemon"
        },
        {
          "title": "MongoDB 数据库入门",
          "link": "3-mongo"
        },
        {
          "title": "MongoDB 数据库图形化管理工具",
          "link": "4-mongo-express"
        },
        {
          "title": "Mongoose 连接两座孤岛之间的桥梁",
          "link": "5-mongoose"
        }
      ]
    },
    {
      "header": "第二章：后端实现用户认证接口",
      "section": [
        {
          "title": "借助 Mongoose 保存用户信息到 MongoDB 数据库",
          "link": "6-user-model"
        },
        {
          "title": "安全的存储用户密码",
          "link": "7-bcrypt"
        },
        {
          "title": "认证方式对比",
          "link": "8-traditional-auth"
        },
        {
          "title": "JWT 知识科普",
          "link": "9-jwt"
        },
        {
          "title": "API 调试工具",
          "link": "10-debug-api"
        },
        {
          "title": "实现用户认证接口",
          "link": "11-auth-api"
        },
        {
          "title": "实现基于 JWT 的用户认证接口",
          "link": "12-jwt"
        }
      ]
    },
    {
      "header": "第三章：搭建前端开发环境",
      "section": [
        {
          "title": "前端开发环境基本配置",
          "link": "13-client-env"
        },
        {
          "title": "引入 Material-UI 组件库美化页面",
          "link": "14-mui"
        },
        {
          "title": "借助 Radium 工具集，编写导航栏的样式",
          "link": "15-nav-bar"
        },
        {
          "title": "通过 React Router 添加前端页面的路由功能",
          "link": "16-react-router"
        }
      ]
    },
    {
      "header": "第四章：前端用户登录功能实现",
      "section": [
        {
          "title": "编写用户登录表单",
          "link": "17-login-form"
        },
        {
          "title": "使用 axios 请求后端用户认证接口",
          "link": "18-submit-login-form"
        }
      ]
    },
    {
      "header": "第五章：Redux 大显神通",
      "section": [
        {
          "title": "创建 Redux Store 传递给 React 组件",
          "link": "19-redux-store"
        },
        {
          "title": "创建与用户认证相关的 Redux Reducer",
          "link": "20-redux-reducer"
        },
        {
          "title": "借助 Redux Thunk 实现异步 Action Creator",
          "link": "21-redux-action"
        },
        {
          "title": "React 组件连接 React Store 分发 Redux Action",
          "link": "22-react-redux"
        },
        {
          "title": "前端导航栏体现用户登录状态",
          "link": "23-header-state"
        },
        {
          "title": "前端实现用户退出登录功能",
          "link": "24-logout"
        }
      ]
    },
    {
      "header": "第六章：用户注册功能实现",
      "section": [
        {
          "title": "后端编写用户注册接口",
          "link": "25-new-user-api"
        },
        {
          "title": "前端编写用户注册表单",
          "link": "26-signup-form"
        },
        {
          "title": "前端请求后端 API 完成注册",
          "link": "27-signup-done"
        }
      ]
    },
    {
      "header": "第七章：添加管理员功能",
      "section": [
        {
          "title": "管理员功能实现",
          "link": "28-dashboard"
        },
        {
          "title": "后端实现添加新文章接口",
          "link": "29-create-post-api"
        },
        {
          "title": "后端限定添加新文章接口的访问权限",
          "link": "30-request-auth"
        },
        {
          "title": "前端实现添加新文章组件",
          "link": "31-new-post"
        },
        {
          "title": "前端实现写文章功能",
          "link": "32-posts-state"
        },
        {
          "title": "前端展示新添加的文章",
          "link": "33-show-posts"
        },
        {
          "title": "从服务器端读取所有文章",
          "link": "34-show-posts-api"
        }
      ]
    },
    {
      "header": "第八章：上传图片功能",
      "section": [
        {
          "title": "前端预览上传的图片",
          "link": "35-upload-image"
        },
        {
          "title": "图片保存到服务器并在前端展示出来",
          "link": "36-show-image"
        }
      ]
    },
    {
      "header": "第九章：单篇文章操作",
      "section": [
        {
          "title": "文章操作组件",
          "link": "37-post-action"
        },
        {
          "title": "显示文章详情",
          "link": "38-show-post"
        },
        {
          "title": "实现编辑文章表单组件",
          "link": "39-update-post"
        },
        {
          "title": "完成更新文章功能",
          "link": "40-update-post-done"
        },
        {
          "title": "实现删除文章功能",
          "link": "41-delete-post"
        }
      ]
    },
    {
      "header": "第十章：部署上线",
      "section": [
        {
          "title": "开发完毕，PM2 部署项目",
          "link": "42-deploy"
        }
      ]
    }
  ]
}
